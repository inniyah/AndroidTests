Index: nanovg/CMakeLists.txt
===================================================================
--- nanovg.orig/CMakeLists.txt
+++ nanovg/CMakeLists.txt
@@ -18,7 +18,7 @@ option(NANOVG_BUILD_GLES3 "Build OpenGL
 option(NANOVG_BUILD_OUI "Build OUI/Blendish" ON)
 
 SET(NANOVG_DEFINES "")
-SET(NANOVG_SOURCES "src/nanovg.c")
+SET(NANOVG_SOURCES "src/nanovg.c" "src/android.c")
 SET(NANOVG_GL_DEFINES "")
 SET(NANOVG_GL_SOURCES "src/nanovg_gl.c" "src/nanovg_gl_utils.c")
 SET(NANOVG_GLES_SOURCES "src/nanovg_gl.c" "src/nanovg_gl_utils.c")
Index: nanovg/src/android.c
===================================================================
--- /dev/null
+++ nanovg/src/android.c
@@ -0,0 +1,68 @@
+// See: http://www.50ply.com/blog/2013/01/19/loading-compressed-android-assets-with-file-pointer/
+// See: https://github.com/android/ndk/issues/562
+
+#include "android.h"
+#include "nanovg.h"
+
+#if defined(__ANDROID__)
+
+#include <stdio.h>
+#include <string.h>
+#include <errno.h>
+#include <android/log.h>
+#include <android/asset_manager.h>
+
+#define LOGV(...) (__android_log_print(ANDROID_LOG_VERBOSE, "NanoVG Demo", __VA_ARGS__))
+#define LOGI(...) (__android_log_print(ANDROID_LOG_INFO,    "NanoVG Demo", __VA_ARGS__))
+#define LOGW(...) (__android_log_print(ANDROID_LOG_WARN,    "NanoVG Demo", __VA_ARGS__))
+#define LOGE(...) (__android_log_print(ANDROID_LOG_ERROR,   "NanoVG Demo", __VA_ARGS__))
+#define LOGF(...) (__android_log_print(ANDROID_LOG_FATAL,   "NanoVG Demo", __VA_ARGS__))
+
+static int android_read(void * cookie, char * buf, int size) {
+  return AAsset_read((AAsset*)cookie, buf, size);
+}
+
+static int android_write(void * cookie, const char * buf, int size) {
+  (void)cookie; (void)buf; (void)size; // unused
+  return EACCES; // can't provide write access to the apk
+}
+
+static fpos_t android_seek(void * cookie, fpos_t offset, int whence) {
+  return AAsset_seek((AAsset*)cookie, offset, whence);
+}
+
+static int android_close(void * cookie) {
+  AAsset_close((AAsset*)cookie);
+  return 0;
+}
+
+AAssetManager * android_asset_manager = NULL;
+void nvgSetAndroidAssetManager(AAssetManager * manager) {
+  android_asset_manager = manager;
+}
+
+FILE * android_fopen(const char * fname, const char * mode) {
+  if (mode[0] == '/') { // absolute path
+  }
+
+  if (strchr(mode, 'w')) { // for writing
+    LOGE("Unable to open asset (trying to write): '%s' ('%s')", fname, mode);
+    return NULL;
+  }
+
+  if (!android_asset_manager) {
+    LOGE("Unable to open asset (unknown asset manager): '%s' ('%s')", fname, mode);
+    return NULL;
+  }
+
+  AAsset* asset = AAssetManager_open(android_asset_manager, fname, 0);
+  if (!asset) {
+    LOGW("Unable to open asset: '%s' ('%s')", fname, mode);
+    return NULL;
+  }
+
+  LOGV("Opening asset: '%s' ('%s')", fname, mode);
+  return funopen(asset, android_read, android_write, android_seek, android_close);
+}
+
+#endif
Index: nanovg/src/android.h
===================================================================
--- /dev/null
+++ nanovg/src/android.h
@@ -0,0 +1,26 @@
+// See: http://www.50ply.com/blog/2013/01/19/loading-compressed-android-assets-with-file-pointer/
+
+#ifndef NANOVG_ANDROID_H_04F2956C_D65D_11EA_852A_07298A1173F1
+#define NANOVG_ANDROID_H_04F2956C_D65D_11EA_852A_07298A1173F1
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+#if defined(__ANDROID__)
+
+#include <stdio.h>
+#include <android/asset_manager.h>
+
+void android_fopen_set_asset_manager(AAssetManager* manager);
+FILE* android_fopen(const char* fname, const char* mode);
+
+#define fopen(name, mode) android_fopen(name, mode)
+
+#endif
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif // NANOVG_ANDROID_H_04F2956C_D65D_11EA_852A_07298A1173F1
Index: nanovg/src/blendish.c
===================================================================
--- nanovg.orig/src/blendish.c
+++ nanovg/src/blendish.c
@@ -27,6 +27,8 @@ THE SOFTWARE.
 #include <memory.h>
 #include <math.h>
 
+#include "android.h"
+
 #ifdef _MSC_VER
     #pragma warning (disable: 4996) // Switch off security warnings
     #pragma warning (disable: 4100) // Switch off unreferenced formal parameter warnings
Index: nanovg/src/nanovg.c
===================================================================
--- nanovg.orig/src/nanovg.c
+++ nanovg/src/nanovg.c
@@ -21,6 +21,8 @@
 #include <math.h>
 #include <memory.h>
 
+#include "android.h"
+
 #include "nanovg.h"
 #define FONTSTASH_IMPLEMENTATION
 #include "fontstash.h"
Index: nanovg/src/nanovg_gl.c
===================================================================
--- nanovg.orig/src/nanovg_gl.c
+++ nanovg/src/nanovg_gl.c
@@ -20,6 +20,13 @@
 #error Define exactly one of NANOVG_GL2, NANOVG_GL3, NANOVG_GLES2, NANOVG_GLES3
 #endif
 
+#include <stdlib.h>
+#include <stdio.h>
+#include <string.h>
+#include <math.h>
+
+#include "android.h"
+
 #ifdef NANOVG_USE_GLEW
 #  include <GL/glew.h>
 static int glew_initialized = 0;
@@ -40,11 +47,6 @@ static int glew_initialized = 0;
 
 #include "nanovg_gl.h"
 
-#include <stdlib.h>
-#include <stdio.h>
-#include <string.h>
-#include <math.h>
-
 #if defined NANOVG_GL2
 #  define NANOVG_GL2 1
 #elif defined NANOVG_GL3
Index: nanovg/src/nanovg_gl_utils.c
===================================================================
--- nanovg.orig/src/nanovg_gl_utils.c
+++ nanovg/src/nanovg_gl_utils.c
@@ -20,6 +20,13 @@
 #error Define exactly one of NANOVG_GL2, NANOVG_GL3, NANOVG_GLES2, NANOVG_GLES3
 #endif
 
+#include <stdlib.h>
+#include <stdio.h>
+#include <string.h>
+#include <math.h>
+
+#include "android.h"
+
 #ifdef NANOVG_USE_GLEW
 #  include <GL/glew.h>
 #endif
@@ -39,11 +46,6 @@
 
 #include "nanovg_gl_utils.h"
 
-#include <stdlib.h>
-#include <stdio.h>
-#include <string.h>
-#include <math.h>
-
 #if defined(NANOVG_GL3) || defined(NANOVG_GLES2) || defined(NANOVG_GLES3)
 // FBO is core in OpenGL 3>.
 #	define NANOVG_FBO_VALID 1
Index: nanovg/src/oui.c
===================================================================
--- nanovg.orig/src/oui.c
+++ nanovg/src/oui.c
@@ -29,6 +29,8 @@ THE SOFTWARE.
 #include <stdbool.h>
 #include <string.h>
 
+#include "android.h"
+
 #ifdef _MSC_VER
     #pragma warning (disable: 4996) // Switch off security warnings
     #pragma warning (disable: 4100) // Switch off unreferenced formal parameter warnings
Index: nanovg/src/nanovg.h
===================================================================
--- nanovg.orig/src/nanovg.h
+++ nanovg/src/nanovg.h
@@ -684,6 +684,13 @@ NVGparams* nvgInternalParams(NVGcontext*
 // Debug function to dump cached path data.
 void nvgDebugDumpPathCache(NVGcontext* ctx);
 
+#if defined(__ANDROID__)
+#include <stdio.h>
+#include <android/asset_manager.h>
+void nvgSetAndroidAssetManager(AAssetManager * manager);
+FILE * android_fopen(const char* fname, const char* mode);
+#endif
+
 #ifdef _MSC_VER
 #pragma warning(pop)
 #endif
