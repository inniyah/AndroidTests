Index: nanovg/CMakeLists.txt
===================================================================
--- nanovg.orig/CMakeLists.txt
+++ nanovg/CMakeLists.txt
@@ -18,7 +18,7 @@ option(NANOVG_BUILD_GLES3 "Build OpenGL
 option(NANOVG_BUILD_OUI "Build OUI/Blendish" ON)
 
 SET(NANOVG_DEFINES "")
-SET(NANOVG_SOURCES "src/nanovg.c")
+SET(NANOVG_SOURCES "src/nanovg.c" "src/android.c")
 SET(NANOVG_GL_DEFINES "")
 SET(NANOVG_GL_SOURCES "src/nanovg_gl.c" "src/nanovg_gl_utils.c")
 SET(NANOVG_GLES_SOURCES "src/nanovg_gl.c" "src/nanovg_gl_utils.c")
Index: nanovg/src/android.c
===================================================================
--- /dev/null
+++ nanovg/src/android.c
@@ -0,0 +1,45 @@
+// See: http://www.50ply.com/blog/2013/01/19/loading-compressed-android-assets-with-file-pointer/
+// See: https://github.com/android/ndk/issues/562
+
+#include "android.h"
+
+#if defined(__ANDROID__)
+
+#include <stdio.h>
+#include <errno.h>
+#include <android/asset_manager.h>
+
+static int android_read(void* cookie, char* buf, int size) {
+  return AAsset_read((AAsset*)cookie, buf, size);
+}
+
+static int android_write(void* cookie, const char* buf, int size) {
+  (void)cookie; (void)buf; (void)size; // unused
+  return EACCES; // can't provide write access to the apk
+}
+
+static fpos_t android_seek(void* cookie, fpos_t offset, int whence) {
+  return AAsset_seek((AAsset*)cookie, offset, whence);
+}
+
+static int android_close(void* cookie) {
+  AAsset_close((AAsset*)cookie);
+  return 0;
+}
+
+// must be established by someone else...
+AAssetManager* android_asset_manager;
+void android_fopen_set_asset_manager(AAssetManager* manager) {
+  android_asset_manager = manager;
+}
+
+FILE* android_fopen(const char* fname, const char* mode) {
+  if(mode[0] == 'w') return NULL;
+
+  AAsset* asset = AAssetManager_open(android_asset_manager, fname, 0);
+  if(!asset) return NULL;
+
+  return funopen(asset, android_read, android_write, android_seek, android_close);
+}
+
+#endif
Index: nanovg/src/android.h
===================================================================
--- /dev/null
+++ nanovg/src/android.h
@@ -0,0 +1,26 @@
+// See: http://www.50ply.com/blog/2013/01/19/loading-compressed-android-assets-with-file-pointer/
+
+#ifndef NANOVG_ANDROID_H_04F2956C_D65D_11EA_852A_07298A1173F1
+#define NANOVG_ANDROID_H_04F2956C_D65D_11EA_852A_07298A1173F1
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+#if defined(__ANDROID__)
+
+#include <stdio.h>
+#include <android/asset_manager.h>
+
+void android_fopen_set_asset_manager(AAssetManager* manager);
+FILE* android_fopen(const char* fname, const char* mode);
+
+#define fopen(name, mode) android_fopen(name, mode)
+
+#endif
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif // NANOVG_ANDROID_H_04F2956C_D65D_11EA_852A_07298A1173F1
