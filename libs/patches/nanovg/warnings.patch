Index: nanovg/src/oui.c
===================================================================
--- nanovg.orig/src/oui.c
+++ nanovg/src/oui.c
@@ -691,6 +691,7 @@ void uiArrangeStacked(UIitem *pitem, int
 // superimpose all items according to their alignment
 static void uiArrangeImposedRange(UIitem *pitem, int dim,
         int start_kid, int end_kid, short offset, short space) {
+    (void)pitem; // unused
     int wdim = dim+2;
 
     int kid = start_kid;
@@ -725,6 +726,7 @@ static void uiArrangeImposed(UIitem *pit
 // squeeze items that expand the available space
 static void uiArrangeImposedSqueezedRange(UIitem *pitem, int dim,
         int start_kid, int end_kid, short offset, short space) {
+    (void)pitem; // unused
     int wdim = dim+2;
 
     int kid = start_kid;
Index: nanovg/src/blendish.c
===================================================================
--- nanovg.orig/src/blendish.c
+++ nanovg/src/blendish.c
@@ -1042,6 +1042,7 @@ NVGcolor bndTextColor(const BNDwidgetThe
 void bndIconLabelValue(NVGcontext *ctx, float x, float y, float w, float h,
     int iconid, NVGcolor color, int align, float fontsize, const char *label, 
     const char *value) {
+    (void)h; // unused
     float pleft = BND_PAD_LEFT;
     if (label) {
         if (iconid >= 0) {
@@ -1087,6 +1088,7 @@ void bndIconLabelValue(NVGcontext *ctx,
 void bndNodeIconLabel(NVGcontext *ctx, float x, float y, float w, float h,
     int iconid, NVGcolor color, NVGcolor shadowColor, 
     int align, float fontsize, const char *label) {
+    (void)align; // unused
     if (label && (bnd_font >= 0)) {
         nvgFontFaceId(ctx, bnd_font);
         nvgFontSize(ctx, fontsize);
@@ -1108,6 +1110,7 @@ void bndNodeIconLabel(NVGcontext *ctx, f
 
 int bndIconLabelTextPosition(NVGcontext *ctx, float x, float y, float w, float h,
     int iconid, float fontsize, const char *label, int px, int py) {
+    (void)h; // unused
     float bounds[4];
     float pleft = BND_TEXT_RADIUS;
     if (!label) return -1;
@@ -1170,6 +1173,7 @@ static void bndCaretPosition(NVGcontext
 void bndIconLabelCaret(NVGcontext *ctx, float x, float y, float w, float h,
     int iconid, NVGcolor color, float fontsize, const char *label, 
     NVGcolor caretcolor, int cbegin, int cend) {
+    (void)h; // unused
     float pleft = BND_TEXT_RADIUS;
     if (!label) return;
     if (iconid >= 0) {
