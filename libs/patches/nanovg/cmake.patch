Index: nanovg/CMakeLists.txt
===================================================================
--- nanovg.orig/CMakeLists.txt
+++ nanovg/CMakeLists.txt
@@ -5,7 +5,7 @@ SET(VERSION 0.1)
 INCLUDE(GNUInstallDirs)
 
 INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/src)
-ADD_COMPILE_OPTIONS(-Wall -Werror -Wno-unused-but-set-variable -Wno-unused-variable)
+ADD_COMPILE_OPTIONS(-Wall -Werror)
 ADD_LINK_OPTIONS(LINKER:--as-needed LINKER:--no-undefined LINKER:--no-allow-shlib-undefined)
 
 SET(NANOVG_DEFINES "")
@@ -16,8 +16,6 @@ SET(NANOVG_GLES_SOURCES "src/nanovg_gl.c
 SET(NANOVG_OUI_DEFINES "")
 SET(NANOVG_OUI_SOURCES "src/oui.c" "src/blendish.c")
 
-LIST(APPEND NANOVG_GL_DEFINES NANOVG_USE_GLEW)
-
 # Build Library
 
 ADD_LIBRARY(nanovg OBJECT ${NANOVG_SOURCES})
@@ -25,16 +23,6 @@ TARGET_INCLUDE_DIRECTORIES(nanovg PUBLIC
 TARGET_COMPILE_DEFINITIONS(nanovg PRIVATE ${NANOVG_DEFINES})
 SET_PROPERTY(TARGET nanovg PROPERTY POSITION_INDEPENDENT_CODE ON)
 
-ADD_LIBRARY(nanovg_gl2 OBJECT ${NANOVG_GL_SOURCES})
-TARGET_INCLUDE_DIRECTORIES(nanovg_gl2 PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/src)
-TARGET_COMPILE_DEFINITIONS(nanovg_gl2 PRIVATE ${NANOVG_GL_DEFINES} NANOVG_GL2)
-SET_PROPERTY(TARGET nanovg_gl2 PROPERTY POSITION_INDEPENDENT_CODE ON)
-
-ADD_LIBRARY(nanovg_gl3 OBJECT ${NANOVG_GL_SOURCES})
-TARGET_INCLUDE_DIRECTORIES(nanovg_gl3 PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/src)
-TARGET_COMPILE_DEFINITIONS(nanovg_gl3 PRIVATE ${NANOVG_GL_DEFINES} NANOVG_GL3)
-SET_PROPERTY(TARGET nanovg_gl3 PROPERTY POSITION_INDEPENDENT_CODE ON)
-
 ADD_LIBRARY(nanovg_gles2 OBJECT ${NANOVG_GLES_SOURCES})
 TARGET_INCLUDE_DIRECTORIES(nanovg_gles2 PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/src)
 TARGET_COMPILE_DEFINITIONS(nanovg_gles2 PRIVATE NANOVG_GLES2)
@@ -53,8 +41,6 @@ SET_PROPERTY(TARGET nanovg_oui PROPERTY
 
 ADD_LIBRARY(nanovg_so SHARED
 	$<TARGET_OBJECTS:nanovg>
-	$<TARGET_OBJECTS:nanovg_gl2>
-	$<TARGET_OBJECTS:nanovg_gl3>
 	$<TARGET_OBJECTS:nanovg_gles2>
 	$<TARGET_OBJECTS:nanovg_gles3>
 	$<TARGET_OBJECTS:nanovg_oui>
@@ -62,21 +48,19 @@ ADD_LIBRARY(nanovg_so SHARED
 
 SET_TARGET_PROPERTIES(nanovg_so PROPERTIES VERSION ${VERSION} SOVERSION 0)
 SET_TARGET_PROPERTIES(nanovg_so PROPERTIES OUTPUT_NAME nanovg)
-TARGET_LINK_LIBRARIES(nanovg_so PUBLIC nanovg nanovg_gl2 nanovg_gl3 nanovg_gles2 nanovg_gles3)
-TARGET_LINK_LIBRARIES(nanovg_so PRIVATE GLEW EGL GL m)
+TARGET_LINK_LIBRARIES(nanovg_so PUBLIC nanovg nanovg_gles2 nanovg_gles3)
+TARGET_LINK_LIBRARIES(nanovg_so PRIVATE EGL GL m)
 
 ADD_LIBRARY(nanovg_a STATIC
 	$<TARGET_OBJECTS:nanovg>
-	$<TARGET_OBJECTS:nanovg_gl2>
-	$<TARGET_OBJECTS:nanovg_gl3>
 	$<TARGET_OBJECTS:nanovg_gles2>
 	$<TARGET_OBJECTS:nanovg_gles3>
 	$<TARGET_OBJECTS:nanovg_oui>
 )
 
 SET_TARGET_PROPERTIES(nanovg_a PROPERTIES OUTPUT_NAME nanovg)
-TARGET_LINK_LIBRARIES(nanovg_a PUBLIC nanovg nanovg_gl2 nanovg_gl3 nanovg_gles2 nanovg_gles3)
-TARGET_LINK_LIBRARIES(nanovg_a PRIVATE GLEW EGL GL m)
+TARGET_LINK_LIBRARIES(nanovg_a PUBLIC nanovg nanovg_gles2 nanovg_gles3)
+TARGET_LINK_LIBRARIES(nanovg_a PRIVATE EGL GL m)
 
 CONFIGURE_FILE(pkgconfig/nanovg.pc.in nanovg.pc @ONLY)
 
@@ -93,47 +77,3 @@ INSTALL(DIRECTORY ${CMAKE_SOURCE_DIR}/sr
 INSTALL(FILES ${CMAKE_BINARY_DIR}/nanovg.pc
         DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig)
 
-# Build Examples
-
-ADD_EXECUTABLE(example_gl2
-	example/example_gl2.c example/demo.c example/perf.c
-	$<TARGET_OBJECTS:nanovg> $<TARGET_OBJECTS:nanovg_gl2>)
-TARGET_LINK_LIBRARIES(example_gl2 PRIVATE nanovg nanovg_gl2 GLEW EGL GL glfw m)
-TARGET_COMPILE_DEFINITIONS(example_gl2 PRIVATE ${NANOVG_GL_DEFINES} NANOVG_GL2)
-
-ADD_EXECUTABLE(example_gl3
-	example/example_gl3.c example/demo.c example/perf.c
-	$<TARGET_OBJECTS:nanovg> $<TARGET_OBJECTS:nanovg_gl3>)
-TARGET_LINK_LIBRARIES(example_gl3 PRIVATE nanovg nanovg_gl3 GLEW EGL GL glfw m)
-TARGET_COMPILE_DEFINITIONS(example_gl3 PRIVATE ${NANOVG_GL_DEFINES} NANOVG_GL3)
-
-ADD_EXECUTABLE(example_fbo example/example_fbo.c example/demo.c example/perf.c $<TARGET_OBJECTS:nanovg> $<TARGET_OBJECTS:nanovg_gl3>)
-TARGET_LINK_LIBRARIES(example_fbo PRIVATE nanovg_gl3 GLEW EGL GL glfw m)
-TARGET_COMPILE_DEFINITIONS(example_fbo PRIVATE ${NANOVG_GL_DEFINES} NANOVG_GL3)
-
-ADD_EXECUTABLE(example_gles2
-	example/example_gles2.c example/demo.c example/perf.c
-	$<TARGET_OBJECTS:nanovg> $<TARGET_OBJECTS:nanovg_gles2>)
-TARGET_LINK_LIBRARIES(example_gles2 PRIVATE GLEW EGL GL glfw m)
-TARGET_COMPILE_DEFINITIONS(example_gles2 PRIVATE NANOVG_GLES2)
-
-ADD_EXECUTABLE(example_gles3
-	example/example_gles3.c example/demo.c example/perf.c
-	$<TARGET_OBJECTS:nanovg> $<TARGET_OBJECTS:nanovg_gles3>)
-TARGET_LINK_LIBRARIES(example_gles3 PRIVATE GLEW EGL GL glfw m)
-TARGET_COMPILE_DEFINITIONS(example_gles3 PRIVATE NANOVG_GLES3)
-
-ADD_EXECUTABLE(example_svg1 example/example_svg1.c $<TARGET_OBJECTS:nanovg>)
-TARGET_LINK_LIBRARIES(example_svg1 PRIVATE GLEW EGL GL glfw m)
-
-ADD_EXECUTABLE(example_svg2 example/example_svg2.c $<TARGET_OBJECTS:nanovg>)
-TARGET_LINK_LIBRARIES(example_svg2 PRIVATE GLEW EGL GL glfw m)
-
-ADD_EXECUTABLE(example_oui
-	example/example_oui.c
-	$<TARGET_OBJECTS:nanovg> $<TARGET_OBJECTS:nanovg_gl3> $<TARGET_OBJECTS:nanovg_oui>)
-TARGET_LINK_LIBRARIES(example_oui PRIVATE GLEW EGL GL glfw m)
-TARGET_COMPILE_DEFINITIONS(example_oui PRIVATE DATADIR="../data")
-
-ADD_EXECUTABLE(example_gl_wrapper example/example_gl_wrapper example/demo.c $<TARGET_OBJECTS:nanovg>)
-TARGET_LINK_LIBRARIES(example_gl_wrapper PRIVATE nanovg nanovg_gl2 nanovg_gl3 nanovg_gles2 nanovg_gles3 GLEW EGL GL glfw m)
