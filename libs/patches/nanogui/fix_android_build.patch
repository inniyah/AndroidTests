Index: nanogui/CMakeLists.txt
===================================================================
--- nanogui.orig/CMakeLists.txt
+++ nanogui/CMakeLists.txt
@@ -119,7 +119,7 @@ if (EXISTS /opt/vc/include)
 endif()
 
 include(CheckCXXCompilerFlag)
-include(CheckCXXSourceRuns)
+#~ include(CheckCXXSourceRuns)
 
 if (NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)
   message(STATUS "Setting build type to 'Release' as none was specified.")
@@ -133,7 +133,7 @@ macro(CHECK_CXX_COMPILER_AND_LINKER_FLAG
   set(CMAKE_REQUIRED_FLAGS ${_CXX_FLAGS})
   set(CMAKE_REQUIRED_LIBRARIES ${_LINKER_FLAGS})
   set(CMAKE_REQUIRED_QUIET TRUE)
-  check_cxx_source_runs("#include <iostream>\nint main(int argc, char **argv) { std::cout << \"test\"; return 0; }" ${_RESULT})
+  #~ check_cxx_source_runs("#include <iostream>\nint main(int argc, char **argv) { std::cout << \"test\"; return 0; }" ${_RESULT})
   set(CMAKE_REQUIRED_FLAGS "")
   set(CMAKE_REQUIRED_LIBRARIES "")
 endmacro()
Index: nanogui/src/screen.cpp
===================================================================
--- nanogui.orig/src/screen.cpp
+++ nanogui/src/screen.cpp
@@ -49,10 +49,10 @@
 #  elif defined(NANOGUI_USE_GLES)
 #    define NANOVG_GLES2_IMPLEMENTATION
 #  endif
-#  include <nanovg_gl.h>
+#  include <nanovg/nanovg_gl.h>
 #  include "opengl_check.h"
 #elif defined(NANOGUI_USE_METAL)
-#  include <nanovg_mtl.h>
+#  include <nanovg/nanovg_mtl.h>
 #endif
 
 #if defined(__APPLE__)
Index: nanogui/include/nanogui/opengl.h
===================================================================
--- nanogui.orig/include/nanogui/opengl.h
+++ nanogui/include/nanogui/opengl.h
@@ -45,7 +45,7 @@
 #  if NANOGUI_GLES_VERSION == 2
 #    include <GLES2/gl2ext.h>
 #  elif NANOGUI_GLES_VERSION == 3
-#    include <GLES3/gl2ext.h>
+#    include <GLES3/gl31.h>
 #  endif
 #endif
 
